object oriented programming
objects has properties or behaviors

class: is a blueprint of an object
object: is an instance of a class 

there is no difference between objects and instances both are the same. 
itenary operator: 

class can have variables and methods

## Class library is a set of classes

every class writen in java have 2 components: attributes and behaviors

## attributes: defines the appearance of an object
    ex: class moto{
        color,
        style,
        make
    }
## instance variable defines the attribute of an object

## behavior: determine the way object will work
    ex: start engine

to define an object behavior we create methods which look and behave like functions in other language
Methods: are functions defined inside classes that operate on instances of those classes.

Methods in Java are reusable pieces of code that perform a specific task.
lets create a class

    class Motocycle{
        String make;
        String color;
        boolean engineState; // this will check if the engine is on or off.
    }
    // we will create a method to the class

    void startEngine(){
        if (engineState == true){
            System.out.println("The engine has started);
        }else{
            engineState = true;
            System.out.println("The Engine is now on. ");
        }
    }

### subclassing means to create a new class from some other class in the class hierarchy
### inheritance is the process of creating a new class from an existing class.

### super class is the parent class from which other classes are derived
### sub class is the child class that inherits from the parent class

### method overloading
it is when you have same method but different parametes


### method overriding
is creating a method in a subclass that has the same signature (name,
number and type of arguments) as a method in a superclass

This is useful when we want our child class method to have the same name as a parent class method but behave a bit differently in some way.

@Override This annotation informs the 
compiler
Preview: Docs Java compilers take Java source code and produce class files containing platform-neutral Java bytecode that can be executed by the Java Virtual Machine (JVM).
 that we want to override a method in the parent class.

### encapsulation is the process of wrapping data and methods into a single unit

### polymorphism is the ability of an object to take on many forms

### Packages in Java are a way of grouping together related classes and interfaces. 


#### An interface is a collection of method names, without actual definitions, that indicate that
a class has a set of behaviors in addition to the behaviors the class gets from its superclasses.


### in a stack you store data in different sequence

### heap
is a region of a computer's memory that is used for dynamic memory allocation. In Java, the heap is where all objects are stored when they are created using the new keyword. The heap is managed by the Java Virtual Machine (JVM) and is divided into two main areas: the young generation and the old generation.

### the this keyword in Java is a reference variable that refers to the current object.

### local variables
are variables that are declared within a method, constructor, or block and can only be accessed within that method, constructor, or block.

### instance variables
are variables that are declared within a class but outside the method

### casting: it is how values are converted into another type especially primitive types.

### we use final keyword before a variable to declare a constant variable
e.g: final float n = 4;

=================================
